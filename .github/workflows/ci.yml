name: CI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '**'

jobs:
  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semver }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow --tags

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/version/execute@v0.9.7
        with:
          useConfigFile: true
          configFilePath: ./GitVersion.yml

  #build:
  #  runs-on: windows-latest
  #  needs: calculate-version
  #  env:
  #    SEMVER: ${{ needs.calculate-version.outputs.semVer }}

  #  steps:
  #    - name: Display version
  #      run: |
  #        echo SemVer: $SEMVER

      #- uses: actions/checkout@v2

      #- name: Setup MSBuild
      #  uses: microsoft/setup-msbuild@v1

      #- name: Setup NuGet
      #  uses: NuGet/setup-nuget@v1.0.5
      
      #- name: Restore dependencies
      #  run: nuget restore NFive.sln

      #- name: Build the solution
      #  run: msbuild NFive.sln /p:Configuration=Release

      #- name: Move files to artifact folder
      #  shell: pwsh
      #  run: |
      #    mkdir Build        
      #    Move-Item -Path README.md,LICENSE,*.dll,nfive.yml,nfive.lock,fxmanifest.lua,index.html,config -Destination Build
        
      #- name: Attach Zip as build artifact
      #  uses: actions/upload-artifact@v1
      #  with:
      #    name: nfive
      #    path: Build

